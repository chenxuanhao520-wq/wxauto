# ==================== 智能路由配置示例 ====================
# 配置说明：将此配置合并到config.yaml或单独使用

# 环境配置
env: dev

# ==================== AI智能路由配置 ====================
ai:
  # 智能路由配置
  smart_routing:
    enabled: true                    # 是否启用智能路由
    strategy: "cost_optimized"       # 路由策略：cost_optimized | quality_first | speed_first
    
    # 复杂度阈值配置
    thresholds:
      simple_max: 0.3                # 简单问题阈值
      medium_max: 0.7                # 中等难度阈值
      complex_min: 0.7               # 复杂问题阈值
    
    # 模型选择规则
    routing_rules:
      simple_questions:              # 简单问题（50%场景）
        model: "qwen-turbo"
        use_for:
          - "product_inquiry"        # 产品咨询
          - "price_check"            # 价格查询
          - "simple_qa"              # 简单问答
      
      medium_questions:              # 中等难度（30%场景）
        model: "qwen-plus"
        use_for:
          - "general_qa"             # 通用问答
          - "how_to"                 # 操作指导
          - "explanation"            # 功能解释
      
      complex_questions:             # 复杂问题（15%场景）
        model: "deepseek"
        use_for:
          - "troubleshooting"        # 故障排查
          - "complex_reasoning"      # 复杂推理
          - "comparison"             # 对比分析
      
      summary_tasks:                 # 总结任务（5%场景）
        model: "qwen-max"
        use_for:
          - "long_summary"           # 长文总结
          - "document_analysis"      # 文档分析
  
  # 主提供商配置（默认）
  primary:
    provider: "qwen"
    model: "qwen-turbo"
  
  # 备用提供商配置
  fallback:
    provider: "deepseek"
    model: "deepseek-chat"
    enabled: true

# ==================== 模型详细配置 ====================
models:
  qwen-turbo:
    provider: "qwen"
    api_base: "https://dashscope.aliyuncs.com/compatible-mode/v1"
    timeout: 30
    max_tokens: 512
    temperature: 0.3
    cost_per_1k_input: 0.0006        # ¥0.6/百万tokens
    cost_per_1k_output: 0.0024       # ¥2.4/百万tokens
    
  qwen-plus:
    provider: "qwen"
    api_base: "https://dashscope.aliyuncs.com/compatible-mode/v1"
    timeout: 30
    max_tokens: 1024
    temperature: 0.3
    cost_per_1k_input: 0.0012        # ¥1.2/百万tokens
    cost_per_1k_output: 0.0048       # ¥4.8/百万tokens
  
  qwen-max:
    provider: "qwen"
    api_base: "https://dashscope.aliyuncs.com/compatible-mode/v1"
    timeout: 60
    max_tokens: 2048
    temperature: 0.3
    cost_per_1k_input: 0.0024        # ¥2.4/百万tokens
    cost_per_1k_output: 0.0096       # ¥9.6/百万tokens
  
  deepseek:
    provider: "deepseek"
    api_base: "https://api.deepseek.com/v1"
    timeout: 30
    max_tokens: 1024
    temperature: 0.3
    cost_per_1k_input: 0.001         # ¥0.5-2/百万tokens（缓存）
    cost_per_1k_output: 0.008        # ¥8/百万tokens

# ==================== RAG配置 ====================
rag:
  # 检索配置
  retrieval:
    bm25_topn: 50                    # BM25召回数量
    vector_topn: 50                  # 向量召回数量
    top_k: 4                         # 最终返回数量
    min_confidence: 0.75             # 最低置信度
    
  # 重排序配置（免费升级）
  rerank:
    enabled: true                    # 是否启用重排序
    model: "bge-reranker-v2-m3"      # 重排序模型
    top_k: 10                        # 重排序后返回数量
  
  # 向量数据库配置
  vector_store:
    type: "chroma"                   # chroma | qdrant | milvus
    persist_directory: "data/chroma_db"
    
  # Embedding配置
  embedding:
    model: "bge-m3"                  # BGE-M3（中文最佳）
    dimension: 1024
    batch_size: 32

# ==================== 知识库中台配置 ====================
kb_platform:
  # 质量控制
  quality:
    threshold: 0.80                  # 质量阈值（极致质量）
    strict_mode: true                # 严格模式
    enable_auto_fix: true            # 自动修复
    enable_llm_fix: true             # LLM辅助修复
  
  # ETL配置
  etl:
    enable_structure_validation: true # 结构验证
    enable_format_normalization: true # 格式标准化
    enable_duplicate_detection: true  # 重复检测
    enable_llm_optimization: true     # LLM优化
    
  # 重复检测配置
  duplicate_detection:
    exact_threshold: 1.0             # 精确重复阈值
    semantic_threshold: 0.85         # 语义相似度阈值
    structural_threshold: 0.90       # 结构化相似度阈值
    use_gensim: true                 # 使用gensim（更准确）
  
  # 动态更新配置
  dynamic_update:
    enabled: true                    # 启用动态更新
    auto_merge: true                 # 自动合并相似内容
    version_management: true         # 版本管理

# ==================== 环境变量配置（优先级最高）====================
# 以下配置通过环境变量设置，config.yaml中的值为默认值

# AI模型API Key（必须配置）
# export QWEN_API_KEY="your-qwen-api-key"
# export DEEPSEEK_API_KEY="your-deepseek-api-key"
# export OPENAI_API_KEY="your-openai-api-key"  # 可选

# 智能路由开关
# export ENABLE_SMART_ROUTING="true"

# 主备模型配置
# export PRIMARY_PROVIDER="qwen"
# export PRIMARY_MODEL="qwen-turbo"
# export FALLBACK_PROVIDER="deepseek"

# 数据库配置
# export DATABASE_URL="postgresql://..."  # 可选，默认SQLite
# export REDIS_URL="redis://..."          # 可选

# 日志配置
logging:
  level: INFO
  format: json
  file: logs/app.log

# 数据库
database:
  path: data/data.db

# 微信配置
wechat:
  check_interval_ms: 500
  
# 其他配置保持原样...
